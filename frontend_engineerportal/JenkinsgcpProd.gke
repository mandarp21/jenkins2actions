#!/usr/bin/env groovy
@Library('ConverseJenkinsLibrary') _
pipeline
{
  agent { label 'dind' }

  environment
  {
    // Name of the Service
    SERVICE_NAME = 'frontend-engineerportal'
    PROD_GKE_CLUSTER_NAME = 'srv12-va'
    PROD_CLUSTER_NAMESPACE = 'production'

  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '10', daysToKeepStr: '14'))
    //timestamps()
    skipDefaultCheckout(true)
  }
  stages {
  stage('Cloning Project') {
    agent { label 'nodejs-medium' }
    steps {
        CloningProject()
    }
  }
  // Automatic Step to Build project
stage('Building Project in  production Namespace') {
    agent { label 'nodejs-medium' }
    steps {
      ansiColor('xterm') {
        git poll: true, credentialsId: 'adopssh', url: 'ssh://git@innersource.accenture.com/ndollpcp/frontend_engineerportal.git'
        sh '''#!/bin/bash
        export COMMIT_ID=$(git rev-parse HEAD | cut -c 1-8)
        echo "$COMMIT_ID" > commit.properties
        npm install -g n
        n --arch x64-musl v14.15.3
        npm i
        npm run build-prod
        cd server
        npm install
        '''
        stash includes: '**/**', name: 'build-artefacts'
      }
    }
}

stage('Pushing Image to Registry') {
    steps {
            container('dind') {
        PushingImageToGCPPROD("$SERVICE_NAME")
        }
    }
  }


// Automatic Step to deploy to EKS Cluster
stage('Helm Deploying to GKE Cluster production Namespace') {
  steps {
		container('jnlp') {
          DeployToGCPPROD("$SERVICE_NAME", "$PROD_CLUSTER_NAMESPACE")
        }
      }
    } 
  }
}
